pkgbase=gnome-software
pkgname=(gnome-software gnome-software-packagekit-plugin)
pkgver=44.3
pkgrel=1
pkgdesc="GNOME Software Tools"
url="https://wiki.gnome.org/Apps/Software/"
arch=(x86_64)
license=(GPL)
depends=(
  appstream
  gsettings-desktop-schemas
  gtk4
  libadwaita
  libsoup3
  libsysprof-capture
  libxmlb
  polkit
	libglib-testing
	libpackagekit-glib
)
makedepends=(
  docbook-xsl
  flatpak
  fwupd
  git
  gobject-introspection
  gtk-doc
  libglib-testing
  malcontent
  meson
)
optdepends=(
  'flatpak: Flatpak support plugin'
  'fwupd: fwupd support plugin'
  'malcontent: Parental control plugin'
)
groups=(gnome)
_commit=c88656e24c414779c296370f832b51088e64f7a3  # tags/44.3^0
source=(
  "git+https://gitlab.gnome.org/GNOME/gnome-software.git#commit=$_commit"
  "git+https://gitlab.gnome.org/mwleeds/gnome-pwa-list.git"
)
b2sums=('SKIP'
        'SKIP')

pkgver() {
  cd $pkgbase
  git describe --tags | sed 's/[^-]*-g/r&/;s/-/+/g'
}

prepare() {
  cd $pkgbase

  git submodule init
  git submodule set-url subprojects/gnome-pwa-list "$srcdir/gnome-pwa-list"
  git -c protocol.file.allow=always submodule update
}

build() {
  arch-meson $pkgbase build "${meson_options[@]}"
  meson compile -C build
}

# Not running tests - need root and a D-Bus system bus

_pick() {
  local p="$1" f d; shift
  for f; do
    d="$srcdir/$p/${f#$pkgdir/}"
    mkdir -p "$(dirname "$d")"
    mv "$f" "$d"
    rmdir -p --ignore-fail-on-non-empty "$(dirname "$f")"
  done
}

package_gnome-software() {
  groups=(gnome)
  optdepends=(
    'flatpak: Flatpak support plugin'
    'fwupd: fwupd support plugin'
    'malcontent: Parental control plugin'
  )

  meson install -C build --destdir "$pkgdir"

  local pkglibdir="$pkgdir/usr/lib/gnome-software"
  _pick packagekit-plugin "$pkglibdir"/plugins-*/libgs_plugin_packagekit*.so
}

package_gnome-software-packagekit-plugin() {
  pkgdesc="PackageKit support plugin for GNOME Software"
  depends=(
    archlinux-appstream-data
    gnome-software
    packagekit
  )

  mv packagekit-plugin/* "$pkgdir"
}
